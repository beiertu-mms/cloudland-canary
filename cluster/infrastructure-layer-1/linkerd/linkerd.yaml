---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU5FeVh2QkxIN2VGWUp1OXFmTkd2N2t3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl3T1RBM01EZzBOakE0V2hjTk1qTXdPVEEzTURnME5qQTRXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUtZanFtWkdqOWN4Q2cyZjVJcFo4NVBTTjVXb3ArNEprSVgwdWdzd1NmRm5uajBieTk4ego4UTR6M3F5dEIweEpQK2w2cFN3VGlJejVMcnlIdmtXZFNqYlYzUXZISUN2bzdGMktMeUhtbmN6eGs0eUNQUmdyCkNPeUVSN3F4azlvZjl6WFNUcEk5TWcvUGsvK0ttK2NHM3BZODFNSXRNU3IzQ0QwTm1qb0tYRmFQd1lEWW85YXAKUElRRUQvc2ZabUZPSlhwa3poek52YVJ5d2Y4bkhYT3UrblZ6a3VaTEpFakJuRnY3bU9MT0tYSUlKRzJpWC9vOQpyNkk1SFlCR1FFZzVIQ25FVXF2VWpuczBGTDZxcDVDczE5bFljNXpMZm9xN1JoQytXMWhDTXM2VW1SZlA2U0NnCnB6c0pwME1PWjVEL0dKNC92SUJQTC9vSm9wY3BPUUNNYTE4Q0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBYS9iRnFzY25MN2NlMm9wZ1lPb2U1b1RnSWI0d2ZRRUIwZzNxMlN4cjgKeEpmbVY4UjdzTHAyanR1WmovRHRYSndoM0R5SVlrME1RSEdQb2piTHNTenMwc1FvejE1ZlVPQkwxNFJVbHQ3eQpBYUlhVllsNjNJUGN6eERkWVdncndWdmQ2K09Ua3NtalRqbWRJYnJHUFNmN0JwVm1iOWFzQnI4S1piU2JTem1ICkNJV2VZT0diWkkyamx5ejdEUjZlUzhNOExOQWVLbkhISkE2ejRYTWdPckljcExtTThydWVna2JRencvSVpVMVkKQ2pYYmhrVVk4bzhEWTZiTzZwYW1xQnVvTmNNQWdJaU5HVGQ4VW56dCtra1BJOGlaUmhJVWFMWFVCTEN5YVh4QwpRNjVaWDh1NzRuRGtYVUNTaEkyam8zWGRHY1BkVWJrRDZYL05tVERlUks4YgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcGlPcVprYVAxekVLRFova2lsbnprOUkzbGFpbjdnbVFoZlM2Q3pCSjhXZWVQUnZMCjN6UHhEalBlckswSFRFay82WHFsTEJPSWpQa3V2SWUrUloxS050WGRDOGNnSytqc1hZb3ZJZWFkelBHVGpJSTkKR0NzSTdJUkh1ckdUMmgvM05kSk9rajB5RDgrVC80cWI1d2JlbGp6VXdpMHhLdmNJUFEyYU9ncGNWby9CZ05pagoxcWs4aEFRUCt4OW1ZVTRsZW1UT0hNMjlwSExCL3ljZGM2NzZkWE9TNWtza1NNR2NXL3VZNHM0cGNnZ2tiYUpmCitqMnZvamtkZ0VaQVNEa2NLY1JTcTlTT2V6UVV2cXFua0t6WDJWaHpuTXQraXJ0R0VMNWJXRUl5enBTWkY4L3AKSUtDbk93bW5RdzVua1A4WW5qKzhnRTh2K2dtaWx5azVBSXhyWHdJREFRQUJBb0lCQUVFWHBqS09JTnN5Qm50UwpFd3UxdEg1TkZhUVlRVHM5R2hleHk1YUlvOS9tTmhSQktMNVpybTlmR1RaVVVKQ3QvbEZ1MFBvVTZTSTZtdm9ZCndRNnJVcUZyWjBDdkVzYkJhcUkzZXNId2hoRCs4VTFTMWJiN1hYSzFYUmtqYkFkQkVPMVFhYUpZUVozNk9VVWMKdkhwbXNaenhWbmFCbUVyNklJc3pJaUx0WGtJM1ROa1NIS0pNV2tPUUFhekE0YTNRMnVXaEd4VVFTSis4OTRZUQp6OFBkUllXeWRPaC9WTHdDQ1NBYkt4VnlNUGhZVmo2NXRuZUJEZHRPbmRaTFdrcm0wS2h2eHkzVWV2cEp0TzhHCjNOT3hoTUNaVWY3QXhhNGYwaG5kNFNyMUJQNzRnRFltWW1SaWUxdGhVMGFQK0t1dXBmVnpDVW5vRVpkR3doUUIKT2xxUFV0RUNnWUVBeFVsRGR1VzhRemd0T2xkTHBmWk1MemtLdU1pQ2ticVdSaktGa1IyaEx5eFhuUnp2Q1h1aQpvQXhnejdFcHdUY1BmRzVMQ2xvR3pCWStJS1dabmJFQkl1TlNzVDMreWdtZ2s0amVVWThuZGpENWw1U3ptajlmCkpwOWJCNC9mQVlvYU1xUzAyanA2T2EvNUdSTVVncGw1akQvUVZXUnhObEpUVWVYT0hCenU4NWtDZ1lFQTE1Vm0KbzNOWDhrbkYwRGY1MmtzTzlLcEwxRDVMMEE5QXZVckNJY0tNRkpOUTlHUW0zTTNwTkwxa045aE80K1NlTTlEMgpDUU9jT0hBVzdxWFhaQUdqTWhUd084OEJrOWVYcmhGaE9EaFFFVCtWd2lpZ3QwVlZQY1BNNFNPa0lLcmltRkFxCk1uNklkS1NydTJ3bkZnMStEZkF0UmpmbU1nMVNzNGNqeTY5OE1iY0NnWUI2OGw5eTExVHQ1eko0YXpLZnFOQnQKbFhUVEYxSVhrMXBYUU9Ed1FMRFVmeVBTcTlkajU0Sy9qemM5OThCM3d1S0p2d3BRMXkzcFBldFYyUjNVb2h4OQpLNEc3SjFHRGcyQm8wU0VMWHRWTzJOS1MzbjdYSDZzaW5LalVHNXIwa0tZbTdYSXZsY1haOFlxaFQ3eTJid0xLCm5uSXM1VDJRaHRtWjdrYjJTaW0zOFFLQmdGdGFRTHNFZG9FQ0IrUGF4SEpmR2dCTlpZS1R2MVowRUMvbVRPczMKWUZxYnJsTlJXVEo1d3RlSlpiMVFXT1d6QytMVEtsN1plOHBpblNVVmUzY3lSbkJEZFNVeTYrMDFEMTVBbVJ6VQpxQUVYRzZQQnlaQy92WVpGd1R5cCtMT3JGZ2dLK0VhYlhjRm53aW5TZzZHUnFCZko3YlZ5bklZYkpTOVVGYlFMCk1hcHpBb0dBQ0pBK0ZLV3ZSblkwQUpUR1lrNGUvOTFqZ1cxM0I2cXFCTVdleU9vL1Y4bmxDMnNZOE1LbklMYlAKZjlpem9QVk0vL3NzTDRZVmpqRG1oZk1pL2FYT0tzQWtzaEpYelNHWWZrVGczS1R5Yjl3SEFac3JQMkNvUW5QSQpJZTFSdEFTcU9IMjhQQTlNOUt1Y1I4L0dHTlh3K2RiU29NZEFZZUdNWFQ1OEFYdVJEOTQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU5FeVh2QkxIN2VGWUp1OXFmTkd2N2t3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl3T1RBM01EZzBOakE0V2hjTk1qTXdPVEEzTURnME5qQTRXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUtZanFtWkdqOWN4Q2cyZjVJcFo4NVBTTjVXb3ArNEprSVgwdWdzd1NmRm5uajBieTk4ego4UTR6M3F5dEIweEpQK2w2cFN3VGlJejVMcnlIdmtXZFNqYlYzUXZISUN2bzdGMktMeUhtbmN6eGs0eUNQUmdyCkNPeUVSN3F4azlvZjl6WFNUcEk5TWcvUGsvK0ttK2NHM3BZODFNSXRNU3IzQ0QwTm1qb0tYRmFQd1lEWW85YXAKUElRRUQvc2ZabUZPSlhwa3poek52YVJ5d2Y4bkhYT3UrblZ6a3VaTEpFakJuRnY3bU9MT0tYSUlKRzJpWC9vOQpyNkk1SFlCR1FFZzVIQ25FVXF2VWpuczBGTDZxcDVDczE5bFljNXpMZm9xN1JoQytXMWhDTXM2VW1SZlA2U0NnCnB6c0pwME1PWjVEL0dKNC92SUJQTC9vSm9wY3BPUUNNYTE4Q0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBYS9iRnFzY25MN2NlMm9wZ1lPb2U1b1RnSWI0d2ZRRUIwZzNxMlN4cjgKeEpmbVY4UjdzTHAyanR1WmovRHRYSndoM0R5SVlrME1RSEdQb2piTHNTenMwc1FvejE1ZlVPQkwxNFJVbHQ3eQpBYUlhVllsNjNJUGN6eERkWVdncndWdmQ2K09Ua3NtalRqbWRJYnJHUFNmN0JwVm1iOWFzQnI4S1piU2JTem1ICkNJV2VZT0diWkkyamx5ejdEUjZlUzhNOExOQWVLbkhISkE2ejRYTWdPckljcExtTThydWVna2JRencvSVpVMVkKQ2pYYmhrVVk4bzhEWTZiTzZwYW1xQnVvTmNNQWdJaU5HVGQ4VW56dCtra1BJOGlaUmhJVWFMWFVCTEN5YVh4QwpRNjVaWDh1NzRuRGtYVUNTaEkyam8zWGRHY1BkVWJrRDZYL05tVERlUks4YgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQVA2RWo4Qml5YXVZdWFIMHBtZVRQU3d3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJeU1Ea3dOekE0TkRZd09Gb1hEVEl6TURrd056QTRORFl3T0Zvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBM3dPVWhLZzNPbDdyWFE3bGlaeS82QnpnanhFY1V6OEpWM0kvNkZacwpHL21tNjRSVGZKeEV5Tm10KytUQnQ4Yzd4UXJwSTJtdytUSnViOXozQ3dNSVBxQ0pEMGpDcGtGeXE2SnhzY21FCkRqVUZTNVEwNFA0WXZWU1lmNVVkMHpFbTRTVTdjT1ZRUkxFWWpiZ2hKdzVlQ2R3Z3JFU2M0VjFDUzA0MWl3TSsKY1FjUkQ0b2p5VFJ1UWV6Ukc2ZlhHTC9sSnBOVllLK1U2Qm5ZcTBUWXE1dzJrOHQ1Q2dxdkQ5TlhZUVRwdTVXTQpyblBkL1Boa2cwSXgrRitzYVoydEJyRnh3UVlwT1AydVd6aUpnTVcwVHRsODZEdTdXY1ZWMWpBclh4cW8vQUNGCjBVdUNTVFBNVzVySS8rNVJlZzBnZTVkRVlXQXpMN201OUx2MnhsZ1B6V2h5eVFJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRREpMa2x1c0ZqaWxGZW95THFNTjltT1NBRXIKWWY1KzF4NFU1T0J5YWk3TW9OUk9uZkF4UEFBcnNCNGYxUVJ1RW9vOHdVZFVSUkpNSjdLcHc2RFNDODBjVmdjYwpocGJESkN0SWQ5d0dDOFhYMmY4VVBFdjc5VE5VTEJoblBKR2tFNDEzM2RtQU05ajZDTGdYUXNPVVBNd05ZUlNiCmRaTGMxdVo1ekxQa2t0WHdYZUovY1UxS0N2dFVCSjBwWkMvS05GRUYxMHA3bEdtQTB2V3ZuVmJZMDJtMU8zc1AKWnhyaEZodXJ0R3B1WXl5K3ZWVEY1Vm1xUmlMMWRTdmNqWlZXSllDSzgyNzRQTXhwRVRBUkdRSWlSZCtzQktINgp1ZEk5Q2VaaDBnS2JWZEt4R0NRTFVhREx6cGRLWGtlUUhKVU0vK1pmRHl4M2NYdDhhbjNaOW9GSHR6Wm0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM3dPVWhLZzNPbDdyWFE3bGlaeS82QnpnanhFY1V6OEpWM0kvNkZac0cvbW02NFJUCmZKeEV5Tm10KytUQnQ4Yzd4UXJwSTJtdytUSnViOXozQ3dNSVBxQ0pEMGpDcGtGeXE2SnhzY21FRGpVRlM1UTAKNFA0WXZWU1lmNVVkMHpFbTRTVTdjT1ZRUkxFWWpiZ2hKdzVlQ2R3Z3JFU2M0VjFDUzA0MWl3TStjUWNSRDRvagp5VFJ1UWV6Ukc2ZlhHTC9sSnBOVllLK1U2Qm5ZcTBUWXE1dzJrOHQ1Q2dxdkQ5TlhZUVRwdTVXTXJuUGQvUGhrCmcwSXgrRitzYVoydEJyRnh3UVlwT1AydVd6aUpnTVcwVHRsODZEdTdXY1ZWMWpBclh4cW8vQUNGMFV1Q1NUUE0KVzVySS8rNVJlZzBnZTVkRVlXQXpMN201OUx2MnhsZ1B6V2h5eVFJREFRQUJBb0lCQUQvNk5mUXNrZE4wQVk5cgp3NXZMMVI0UWtyZFlVRWp0YjQrZm5nZllLeUdIYUVSdWJNajF4NkhiR05lSGs2OVdQNlpTYi9tUnk0eGgxRjdSCkJDb3JqNFR2NXdIMGZLclhZYjh0VmZLTC9nOVpWSkNQRHZCdzFNWVQ2Ny9HRm8xTXIzdXRnN1RxaERHQW9LdWYKWkJ0aE9zY1hXR1F6TnRKTVA4Vjh4VTJBKzd2T292dytnajBQc1dpU1JPUjdRNTA1RXlGeldkSUt0UlVieEpoagpIQzQzZU4vOVNvb0ZnKytaa3gxMXVnSXFWeTI2ODVQcXVHeHgxUDdyZTU2QytRYkdTMFVieStjZkZLN0lVN2FsCkJEcjliOFFEaEo3L2lGTlhRWkdYZE9vejRFS0ZmT0dXb3ZBSS8wMXU1QnZHY1V6ek5SQ2Fzd2QxazJKcDJHNUQKbHZRY1dWVUNnWUVBK0NjL1VFUGhlWktsRkpJV3pqR2hPNVlZajBjZFJzd2JmSGc2U0oyMWxrQTJXTjQ4ZElWYgp0eXhJcWZFY0w0RUZFL0ZVS1pRL3pqVkZjL2lmOFZhR01NRWhRQldtVFZ0alVmVzByM2tXVTFEQ0lqQ2RMdmsvClJsSG1CREFwZFk4UWpXSm40b1BOc2JrOVh1cU52K1BUWjhiQ0N1Mm53L3poR3FpRi80N3NQOWNDZ1lFQTVoRFYKdTY4OFpwdlFOTkJDbmdJY2pBbCtveDFCSEFSNjlBdlVrUDFIdFkvSEpRNGJrZC9PcWtFZFhpdWJwU2I2Rkd0agpJOEdtWkZuYkJSZ3ArcEpZUzhjNDVWY1kyd1JRQUlHc3h3UlZxZDFkRTczRFZSUVh1c25tWWt5RVZwVGJnRHh2Cm5YSkhac29aZFhWak96enNnWlRqZUIyUis3M2NKODdZZzczWkRsOENnWUVBeFJBRnkydmNobnJaOVhmOS9FaVYKVFlob2dIOXMxR2dKKzlKT0ZwU0hPNFpLb2svNW1sNjg4cjJNQnNpZUpXdEQ2UTVnVTVTVEJ1SnZBU1dUZmtmRAowTHZOOStJNWFuMEVablhFd3dSWm9sZ2prcHNnZDhrZllteHZTU3dtQUdGWU42N0o2S3Zha1NRVmhHYW5vcGI5CnJ3KzcwSW5pREZXcFBVNU8reDg0cFlrQ2dZQTV6cE1WcEpORnFQTG93a2RxMGxiLzdNYlFEMkt6dW9CMlg1NmEKaTdsLzZrOThoUTN5V2t6Z1JKb3ZkaitXZ0xPbmU5QWVST01kSmVLOVpmUHVUT1U0clNjam9QM1Mwa09UelFGdgp4Q3dPRVZ2NHdONmF1d0MzWTFHcTgxVHhPRmZxNGNTZHlBQWUyTHNLNDJMNm1IVkluZk9GMDlCQmM5UWtnSG13CnFId29ld0tCZ1FDQXAzd3Njc21ETm5tdlJGWm03L0J6bEVib3lYelFhaHJybGljeTk0ay9PVVd2Tk5LRTd1Y2kKZG9MQjRRL1RiN1JLRGlJUVpleXNOeDFJY3ZpdFVEa00ydTBpOVE5dGRsK09yS2lVdjhxV241dlArYUpiVzF3bApyVlFoRzdwQUI2eDZxRVdJalIvN1V4SlB2SkJsN0xBSW55cS8yOTV1S3Bmc2NRYnQ5Wjg3dEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQVA2RWo4Qml5YXVZdWFIMHBtZVRQU3d3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJeU1Ea3dOekE0TkRZd09Gb1hEVEl6TURrd056QTRORFl3T0Zvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBM3dPVWhLZzNPbDdyWFE3bGlaeS82QnpnanhFY1V6OEpWM0kvNkZacwpHL21tNjRSVGZKeEV5Tm10KytUQnQ4Yzd4UXJwSTJtdytUSnViOXozQ3dNSVBxQ0pEMGpDcGtGeXE2SnhzY21FCkRqVUZTNVEwNFA0WXZWU1lmNVVkMHpFbTRTVTdjT1ZRUkxFWWpiZ2hKdzVlQ2R3Z3JFU2M0VjFDUzA0MWl3TSsKY1FjUkQ0b2p5VFJ1UWV6Ukc2ZlhHTC9sSnBOVllLK1U2Qm5ZcTBUWXE1dzJrOHQ1Q2dxdkQ5TlhZUVRwdTVXTQpyblBkL1Boa2cwSXgrRitzYVoydEJyRnh3UVlwT1AydVd6aUpnTVcwVHRsODZEdTdXY1ZWMWpBclh4cW8vQUNGCjBVdUNTVFBNVzVySS8rNVJlZzBnZTVkRVlXQXpMN201OUx2MnhsZ1B6V2h5eVFJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRREpMa2x1c0ZqaWxGZW95THFNTjltT1NBRXIKWWY1KzF4NFU1T0J5YWk3TW9OUk9uZkF4UEFBcnNCNGYxUVJ1RW9vOHdVZFVSUkpNSjdLcHc2RFNDODBjVmdjYwpocGJESkN0SWQ5d0dDOFhYMmY4VVBFdjc5VE5VTEJoblBKR2tFNDEzM2RtQU05ajZDTGdYUXNPVVBNd05ZUlNiCmRaTGMxdVo1ekxQa2t0WHdYZUovY1UxS0N2dFVCSjBwWkMvS05GRUYxMHA3bEdtQTB2V3ZuVmJZMDJtMU8zc1AKWnhyaEZodXJ0R3B1WXl5K3ZWVEY1Vm1xUmlMMWRTdmNqWlZXSllDSzgyNzRQTXhwRVRBUkdRSWlSZCtzQktINgp1ZEk5Q2VaaDBnS2JWZEt4R0NRTFVhREx6cGRLWGtlUUhKVU0vK1pmRHl4M2NYdDhhbjNaOW9GSHR6Wm0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVVENDQWptZ0F3SUJBZ0lQZEtKYlNKWndMMitvWFBjWE0rVzhNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1DMHgKS3pBcEJnTlZCQU1USW14cGJtdGxjbVF0Y0hKdmVIa3RhVzVxWldOMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl3T1RBM01EZzBOakE0V2hjTk1qTXdPVEEzTURnME5qQTRXakF0TVNzd0tRWURWUVFERXlKc2FXNXJaWEprCkxYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1YzNaak1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0MKQVE4QU1JSUJDZ0tDQVFFQXkxWVhuZlpiVFhIZkN2aTNQR0RaL3l0ejVLbElwcXY3WnM2bGtYZDRmNGo2aEEvQwpUTnFLWTJpQVFrenlUQ3JKSGJ1ekZBRjhwZ2xFZGtBUm5zdWpFQWJscDJYYWlwQm16ZVZXN0h6VHREMEhHeS85CkRzZEhTQk45UU9BMHpBZkdvZzZtSC9hYm5TTllQT1BkOVpnb3RLOGFOenU0T0VBc2JWOGJYekdKbDhZZEp6VDUKbVBSejkvQ1FQYkVKOWU3RENMRjVPVk9aODNBbjVZbzlVMUhEbSs4MFgzVE92TVYwWFZwMHZjWWpSM1gvNW1HMwpJUU50N256djUvRTlLN0ZGRDJMd3FvVE5aa2F4VzRVcnFIWmdUeHpSdkowOHQ4clFZQlAvbEwySW41TGhHclhGClpBL3lIMkNkclhJNTlTV0VibzV2RnBiUnczM2RhMzErRVdqQ0N3SURBUUFCbzI0d2JEQU9CZ05WSFE4QkFmOEUKQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQwpNQUF3TFFZRFZSMFJCQ1l3SklJaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yCll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFRYzdCVTBYUU5lN0tNK0c1aU4wT2d2SXBSLzBqanZSMWFZUkUKdmtRaWZJa3BjaDBVK1RWU2hMQlRWK0swb1FTeUFoSjAzU28xeTJHdG1CN3ArNWR1WWtaZXlHMVRrSDh3OGNCWApKUDF0R3hzc2Y0L3hjbllTaUxhbVZaZ1ZNTUw1VmM5UWY5ODh4VkF5dTkvdER0L3dtdEZtVE12MFFrRGJKRVlzClRBQi91bEpuSmY5bkhQSi9CRGhXWEV2aCtYdE1yRWZ0bEFXNlhld0hSWDBqaGs1NHdURWJYbTlBZjBKQ2xZN0YKcXJHRHB3eDR0OTkyc3BZajZjQ3VETFZCcXJkQ0JMRlBaeVBVcGFUaXJjc1dGQy8zc01lRHFncVlpT0N4d1hNbwpoTnZsUXVzQm40NFdQYzNwd3NaU2orZlgxVkNOM3A2ZTd2dkJiV2RHa0VvWUYxcUpKdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeTFZWG5mWmJUWEhmQ3ZpM1BHRFoveXR6NUtsSXBxdjdaczZsa1hkNGY0ajZoQS9DClROcUtZMmlBUWt6eVRDckpIYnV6RkFGOHBnbEVka0FSbnN1akVBYmxwMlhhaXBCbXplVlc3SHpUdEQwSEd5LzkKRHNkSFNCTjlRT0EwekFmR29nNm1IL2FiblNOWVBPUGQ5WmdvdEs4YU56dTRPRUFzYlY4Ylh6R0psOFlkSnpUNQptUFJ6OS9DUVBiRUo5ZTdEQ0xGNU9WT1o4M0FuNVlvOVUxSERtKzgwWDNUT3ZNVjBYVnAwdmNZalIzWC81bUczCklRTnQ3bnp2NS9FOUs3RkZEMkx3cW9UTlprYXhXNFVycUhaZ1R4elJ2SjA4dDhyUVlCUC9sTDJJbjVMaEdyWEYKWkEveUgyQ2RyWEk1OVNXRWJvNXZGcGJSdzMzZGEzMStFV2pDQ3dJREFRQUJBb0lCQUhpd1VmWkZTbTRPUDVmdwpoam9GTm44NVdHR0poUURBcGNpZ3NTOUZYVFU5cFl3TEdvV3BWV2lwbHk5RElySEkxM1NaZXpKTnE2R1ZjSmhMCmNPbnk3b2ROd0xQNlJadm5GODN2NlFjWEZFVXZ6Kzc0TGRpK3VYVnpjKzIwNWtHUC8vc2lmTUlPQ3RGYk1EMTcKOXJ1V0k5c1M3NW1IRGRIOWJTRkJ5U3BZYWRXMkJzU3lsNDJPajBCOE9xSS9vb0hlcXNYRXFXbFZIVHNjcE04dQpBVnVvS3BGc083ekRaM1hsbUZhdVhGVUFPNUtOaC8vNUhSM3Zqbk14eHJBWGtoL29YenhzSlpZOHM1cjJQVXFVCm1kZDdySTJlaXZKcTZNQmdNT3Z0M2phM0FmVS9LRFBBTEZWcVEvUGRMYUgvbHRBMzNZQjlXMjFUaDluNE1hRU0KZjBBOEw1a0NnWUVBOTlZL1VxUlgvVEd4aUdRblRWa2xqU3VPd0xpMlRTWlpTejBqeVNTdVR2SDFKNVRkdXhCNgptdHNTRUdtUXBLckJKaWxVN25YYmkwdHZ6TTlaYUUxSi9JUUtaZy9BZ2dNblJudVVxMXc4R3F6WmhFRGViZVVxCitjb3YvblFZRXM5bDd0UFVWbmIyV1A4ZHBLcWFKS0xFalJBcjJTNG43TU9tbkVTaDIvQml5MDBDZ1lFQTBnaWUKQkJkRitjNENRTVJXb1JMWUVQLzhqSU9aVFRITGViWWhOQmN6R0NZZjh5R3FFenlYR09XT0JUV1I3RW5ROUhsdgpPd3EveE44OXNZMXJmaTl5Yms3ci9lL0dCcitBMTlWWjRkelorNmM3SlJoYm1rT0xSdG84dXdCblllV2ZiZGFvCkM0OW1lRmd2OU4wanBJV3dBRWluczRuUStwQUFJNlBzMnEwTUpyY0NnWUVBdDFHR2JUNmF4dkhtKzVmNWFrRXkKZ1lWaWhqTWF4VjVFVmw3WEJZVllXWlNuWGF2RGh3YmRhWVg1aXFKTEYwSW10RytHSHd5V1pDWmNnQVl2Zi9NTApjdmpJS0U0bWV3U1NISlIwbDN3V0NUVXBmNlhyNFNYTjhBNGFDZ0VkZld4alhaRGFVMHFUVmFqKzZEbzQ0amh6CllsUS8ydGxGTnVCUmNPMWpQQ2hISzFFQ2dZRUF1c2sxRmZoSW4vYm9wQWEzNy9sZE5Ba2o1U2Fuc0RJSGZjOU8KU2hBVHZYY3lWTHZzajcwRHR2MTNSd1MwS0VvaFRUbXRoUGx6UURjMG0zRmtWazBGM0RuTndBQjd3TWFRWStIMgpWRnBmZFdEc3hYbWJCVjdxUHZHWXJzbVdKMGJaZVFvOFdrT0dZcUl5eS9YYVc5Y1VoYndYZ0NDaFBDUFNLOS85CnBSL2VQWk1DZ1lBUG5MaEhoVDlaTEN6VFM2a0NRQXV2aGFjcWZGbjhwMVBRb2VDK0ZPTWIrYXpFV2ZpRGJhVVgKaG5LSzM5S1p6U090b0w3TmJDTnNaTWJ1Wk9ZMkVOZzlaMGNQTm01UTBqMC9kWC9Wc2J4aUp1bG84Z3JRcGxCSgo4WTJvZTgzdkpvYW5uUFBXSU9haFh3U05vWHlPTHlpNUxDMytXaEpNWHE0Qmo1b2dDRm11K1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVVENDQWptZ0F3SUJBZ0lQZEtKYlNKWndMMitvWFBjWE0rVzhNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1DMHgKS3pBcEJnTlZCQU1USW14cGJtdGxjbVF0Y0hKdmVIa3RhVzVxWldOMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl3T1RBM01EZzBOakE0V2hjTk1qTXdPVEEzTURnME5qQTRXakF0TVNzd0tRWURWUVFERXlKc2FXNXJaWEprCkxYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1YzNaak1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0MKQVE4QU1JSUJDZ0tDQVFFQXkxWVhuZlpiVFhIZkN2aTNQR0RaL3l0ejVLbElwcXY3WnM2bGtYZDRmNGo2aEEvQwpUTnFLWTJpQVFrenlUQ3JKSGJ1ekZBRjhwZ2xFZGtBUm5zdWpFQWJscDJYYWlwQm16ZVZXN0h6VHREMEhHeS85CkRzZEhTQk45UU9BMHpBZkdvZzZtSC9hYm5TTllQT1BkOVpnb3RLOGFOenU0T0VBc2JWOGJYekdKbDhZZEp6VDUKbVBSejkvQ1FQYkVKOWU3RENMRjVPVk9aODNBbjVZbzlVMUhEbSs4MFgzVE92TVYwWFZwMHZjWWpSM1gvNW1HMwpJUU50N256djUvRTlLN0ZGRDJMd3FvVE5aa2F4VzRVcnFIWmdUeHpSdkowOHQ4clFZQlAvbEwySW41TGhHclhGClpBL3lIMkNkclhJNTlTV0VibzV2RnBiUnczM2RhMzErRVdqQ0N3SURBUUFCbzI0d2JEQU9CZ05WSFE4QkFmOEUKQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQwpNQUF3TFFZRFZSMFJCQ1l3SklJaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yCll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFRYzdCVTBYUU5lN0tNK0c1aU4wT2d2SXBSLzBqanZSMWFZUkUKdmtRaWZJa3BjaDBVK1RWU2hMQlRWK0swb1FTeUFoSjAzU28xeTJHdG1CN3ArNWR1WWtaZXlHMVRrSDh3OGNCWApKUDF0R3hzc2Y0L3hjbllTaUxhbVZaZ1ZNTUw1VmM5UWY5ODh4VkF5dTkvdER0L3dtdEZtVE12MFFrRGJKRVlzClRBQi91bEpuSmY5bkhQSi9CRGhXWEV2aCtYdE1yRWZ0bEFXNlhld0hSWDBqaGs1NHdURWJYbTlBZjBKQ2xZN0YKcXJHRHB3eDR0OTkyc3BZajZjQ3VETFZCcXJkQ0JMRlBaeVBVcGFUaXJjc1dGQy8zc01lRHFncVlpT0N4d1hNbwpoTnZsUXVzQm40NFdQYzNwd3NaU2orZlgxVkNOM3A2ZTd2dkJiV2RHa0VvWUYxcUpKdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.0
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.0
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjA5MDcwODQ1NThaFw0yMzA5MDcwODQ2MThaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEoochnQhzeskvxkYuUIe/0QUJ5YEJbayhtj3R2dsNVN/0Jl7COvfwJayiPmGA
            YbAYeXtbReod1DyfXQqQxcLUxqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSMM4z0VPRYDXI/IJF3amn7x/chsDAKBggqhkjOPQQDAgNHADBEAiBqKddzMVNh
            xtU27eT5woyoNquBiKBkNJnW1YnCrE/kIgIgAJSwQgzpks/yQAa5WneTaiT0kNMs
            xlXXIKcVU8E5vWM=
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjA5MDcwODQ1NThaFw0yMzA5MDcwODQ2MThaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEoochnQhzeskvxkYuUIe/0QUJ5YEJbayhtj3R2dsNVN/0Jl7COvfwJayiPmGA
      YbAYeXtbReod1DyfXQqQxcLUxqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBSMM4z0VPRYDXI/IJF3amn7x/chsDAKBggqhkjOPQQDAgNHADBEAiBqKddzMVNh
      xtU27eT5woyoNquBiKBkNJnW1YnCrE/kIgIgAJSwQgzpks/yQAa5WneTaiT0kNMs
      xlXXIKcVU8E5vWM=
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.0
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: stable-2.12.0
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE1TURjd09EUTFOVGhhRncweU16QTVNRGN3T0RRMk1UaGFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVvb2NoblFoemVza3Z4a1l1VUllLzBRVUo1WUVKYmF5aHRqM1IyZHNOVk4vMEpsN0NPdmZ3SmF5aVBtR0EKWWJBWWVYdGJSZW9kMUR5ZlhRcVF4Y0xVeHFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU01NNHowVlBSWURYSS9JSkYzYW1uN3gvY2hzREFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUJxS2Rkek1WTmgKeHRVMjdlVDV3b3lvTnF1QmlLQmtOSm5XMVluQ3JFL2tJZ0lnQUpTd1FnenBrcy95UUFhNVduZVRhaVQwa05Ncwp4bFhYSUtjVlU4RTV2V009Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUlZRlRLdnFmRnNhdjY0b0E5Q3FqRzlQQldlVUtjY1QxTkJPQmRnUjJBN1dvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFb29jaG5RaHplc2t2eGtZdVVJZS8wUVVKNVlFSmJheWh0ajNSMmRzTlZOLzBKbDdDT3ZmdwpKYXlpUG1HQVliQVllWHRiUmVvZDFEeWZYUXFReGNMVXhnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjA5MDcwODQ1NThaFw0yMzA5MDcwODQ2MThaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEoochnQhzeskvxkYuUIe/0QUJ5YEJbayhtj3R2dsNVN/0Jl7COvfwJayiPmGA
    YbAYeXtbReod1DyfXQqQxcLUxqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBSMM4z0VPRYDXI/IJF3amn7x/chsDAKBggqhkjOPQQDAgNHADBEAiBqKddzMVNh
    xtU27eT5woyoNquBiKBkNJnW1YnCrE/kIgIgAJSwQgzpks/yQAa5WneTaiT0kNMs
    xlXXIKcVU8E5vWM=
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 2546320dee8cccf8ddf7dc7ef7beeef3a254af5ab8e6e81035f416c10f63a5c4
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 2546320dee8cccf8ddf7dc7ef7beeef3a254af5ab8e6e81035f416c10f63a5c4
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
spec:
  concurrencyPolicy: Replace
  schedule: "56 08 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.0
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.0
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.0
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.0
        linkerd.io/proxy-version: stable-2.12.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 2546320dee8cccf8ddf7dc7ef7beeef3a254af5ab8e6e81035f416c10f63a5c4
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.0
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaHpDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakE1TURjd09EUTFOVGhhRncweU16QTVNRGN3T0RRMk1UaGFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFb29jaG5RaHplc2t2eGtZdVVJZS8wUVVKNVlFSmJheWh0ajNSMmRzTlZOLzBKbDdDT3Zmd0pheWlQbUdBCiAgICAgICAgWWJBWWVYdGJSZW9kMUR5ZlhRcVF4Y0xVeHFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlNNTTR6MFZQUllEWEkvSUpGM2Ftbjd4L2Noc0RBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCcUtkZHpNVk5oCiAgICAgICAgeHRVMjdlVDV3b3lvTnF1QmlLQmtOSm5XMVluQ3JFL2tJZ0lnQUpTd1FnenBrcy95UUFhNVduZVRhaVQwa05NcwogICAgICAgIHhsWFhJS2NWVThFNXZXTT0KICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUlZRlRLdnFmRnNhdjY0b0E5Q3FqRzlQQldlVUtjY1QxTkJPQmRnUjJBN1dvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVvb2NoblFoemVza3Z4a1l1VUllLzBRVUo1WUVKYmF5aHRqM1IyZHNOVk4vMEpsN0NPdmZ3CiAgICAgICAgSmF5aVBtR0FZYkFZZVh0YlJlb2QxRHlmWFFxUXhjTFV4Zz09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU1qQTVNRGN3T0RRMU5UaGFGdzB5TXpBNU1EY3dPRFEyTVRoYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVvb2NoblFoemVza3Z4a1l1VUllLzBRVUo1WUVKYmF5aHRqM1IyZHNOVk4vMEpsN0NPdmZ3SmF5aVBtR0EKICBZYkFZZVh0YlJlb2QxRHlmWFFxUXhjTFV4cU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCU01NNHowVlBSWURYSS9JSkYzYW1uN3gvY2hzREFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUJxS2Rkek1WTmgKICB4dFUyN2VUNXdveW9OcXVCaUtCa05KblcxWW5DckUva0lnSWdBSlN3UWd6cGtzL3lRQWE1V25lVGFpVDBrTk1zCiAgeGxYWElLY1ZVOEU1dldNPQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
