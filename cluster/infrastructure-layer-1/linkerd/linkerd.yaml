---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUwrbnpNSnRBa0JBY1lja0VUMFJzQU13RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak13TXpBME1Ua3lPREV5V2hjTk1qUXdNekF6TVRreU9ERXlXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUt6bmd6T1htaFRZczJJQ2U4dWNJZkxJb2ZHNjE0VWtsb0tTanVIK3IyL3VEbnd1SURMOApoaTN1K1R4OC9jdENBbDk5Wlo0UEgvbjlrMkw1Q3J6N2xDUXBNMmE2WHJ1dzQxL1pHdWRTRWN1WXpmL2lTZy93Ci9TYlpHN21Sc1RDeDNFTnpXRzNPOGtCNnJrNkdveWZWMDFNZzZKQ3ZTUXlYZFUrVWVtTEFXZ2lxM2FPaW4wVkcKZnkxK3VSUENMc2swdFFrTkozWis0UjVERWxVMWJkRGRTS2RNZ3dyMWZyeGIwbEdDYWJHTHUxSVd3eWQ4SUxXbQpSUWEvbGpkcjRtZG1DbGd3ZnBlZ0NSTktpcDdaYlFGTU1JL0RXTnBvQ2N4dXBra2ZNaFhHd0N1TlJzNGdtU2c3ClBHVnZEK2h4L2FYVGY3WHlPWlFuYkJhZ09VdXhIVnRLNDdFQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCVndwY3UrMXJQSVhxdWE0aWxEOFhyT0pOaFd3RllxbzdmelU1YkYzVTMKN3VsSkZNa1hYOGNmWWtiV1NhVUdnOTFqY0FkTlM5STlkd0RXUmcvYWkzOHNFWXlpdEVaMEdTNzlRV0JZODNCOAplaklGeFFjRko3RW9UNlBtaU4vdEZtQUZHTjczUGJFV3IrcTMvK2RaTTF6U1dTZyt2R3d0VmdWSWJEcjl4YkJwCjhxaXpFbjBYSWRXRUI5b0tZcU5uaVA2T29qSlhHL3pydTBSNkN6bDRxV0sxdWIwYS9mWTVBVEN6Y2dURmFaVXMKTHQwbnpXZkRpK0FYTVR6REhaRU5JSUJPMUZTWllaOHhsYlFjZWZnSTExUlJQS0E4UFhBS3dTNyt1akwwWDN3NwoveGZmTWdlcEVJeGJFSjQ2VDRFU0c3YzNaUzdDRnJjK2xrS1IzRHdUSlo1aQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBck9lRE01ZWFGTml6WWdKN3k1d2g4c2loOGJyWGhTU1dncEtPNGY2dmIrNE9mQzRnCk12eUdMZTc1UEh6OXkwSUNYMzFsbmc4ZitmMlRZdmtLdlB1VUpDa3pacnBldTdEalg5a2E1MUlSeTVqTi8rSksKRC9EOUp0a2J1Wkd4TUxIY1EzTlliYzd5UUhxdVRvYWpKOVhUVXlEb2tLOUpESmQxVDVSNllzQmFDS3JkbzZLZgpSVVovTFg2NUU4SXV5VFMxQ1EwbmRuN2hIa01TVlRWdDBOMUlwMHlEQ3ZWK3ZGdlNVWUpwc1l1N1VoYkRKM3dnCnRhWkZCcitXTjJ2aVoyWUtXREIrbDZBSkUwcUtudGx0QVV3d2o4TlkybWdKekc2bVNSOHlGY2JBSzQxR3ppQ1oKS0RzOFpXOFA2SEg5cGROL3RmSTVsQ2RzRnFBNVM3RWRXMHJqc1FJREFRQUJBb0lCQUdsL0hKTjNGYUZRa3lyaQozd3ZkcU8wTXM1cmRhTENwSVZocitkZzBZSERIN0hpaVlDMGIzUGJiejZDemx0clUzTVBNckJyam1ad2J0emoxClFUTUx3VmpLOXJ6Z1MvcnpNOWlBakNURjgydXBRVSsyajMvb2gxMlRySkh1TGhITEE5ejMzT1dyRmk1M2JERW4KZnhkSUpSZWNoYW41K1hWQVdHaUU3S09pUDR6M1N3ODAyTVJhQU1TVU5pQy9TK0lvZDZFRFcxMjJNYURpUzhvNgp5bDBMU2xMb1dWTy9Venl5NVM4TUdGazcwdVVHb1Q5UWJJeW85UitCZDYyQVR6YVUzNGp4WVZ6UGFZZFQ0YUlKCktDMnhGQ1drQjFJQmVKYVlJaW5WRHArY1RWcWxndmtpcnlDV203SGhzR2xNSy9XOGY0STNHRXlUcGdqazE1ck0KMUNTb2h1MENnWUVBM1hGanE4Uk0zWXVHVFM4c2prRG5pa0lGZlhOY3FPQXNMN3Y3U29sdVZLcGd3QTB2QWlMLwpIMnpiTURnbVYwcmw0bjRuMWdSZTMzOFV1WEs4TXJnU1RLT0pkTk84dkpoSlV4Uzl2aEM1UnBCT2lNNjBFWm4wCkd0bkY0c1JFMXhmcy9lVHdMRmlYVXhGWnVTS2w5L3AyTm4zMGNYMm4xcHkyOEEwbDJkTHhRUjhDZ1lFQXgrTUQKckt0L3pJeHJ6dHRGN0cwYWFBZU0yYjduTWwxcjhmMy9vQm41ZGJGZlFQT2VFZ3J0Z2hweEZGOCtFWDVSUnRvUQpZc0hqbUpCNnRHcUxpUm1vb2NNRFRZL2ZWeENXTk5oQTF2UW1wK2syMzIra0ROWktYdDBuNjloUkNZWFNKWXFxCkpXZ3RqZXFacDhDdGp6UzBqcjlGRkFteHplYVRGM29SV1c1WE1TOENnWUJucDQwRk9TVFZ5MXE1Ukd5eHhkWGMKRk4xbkJKb0ovcTBRUndqd3NmWHdNYlNLRVdIQXVVcjhsY0xnQmxpRUllNExvQXZibFQ0bmxkL0lrdGxmVUdSWQpkWENCUEIrcmxBazJsNDNkcXd4ZTZHdXFoRDhyd2duT2k4T2lTMGNCL0JRV0lKVC8zUlF3Y1AyenVIRkI2MzVzCk1YYzdySnJrellTZ1J6ZEJpQWtmOXdLQmdRQ0UycThyaWdWMFIvU3oxV3dCTzNic28vQUxIZVoreERjbDdXT0UKM3g2K0NmazhxMjlwb0pmQi9KOGlJamVYMnZSY2VqMmYxaXpXejFpdko0Mjh2ekFrNi8vN0FtQTRkdzdPNnRrVgp4Y3NYbVZ0ZVlNNlJ0YkJTb3YyUXRRTVBxRUZIc0lWc1BYVGh1WWNOUjNSVUZYell6K295NmtxaWh0bEhKbHYzCnErNEtBd0tCZ0dRb3Rja1ZKTU9CcmJlTGE2b0dtSmJzL3hXWno0SnN1TS8xYU1hNEh1S1hrTndkeWpRNjVxd3EKR3lGaWs1cER4aUFWNkxoRTJ0Tm1wM0kyQUVGZUZTdnJZbGh6bC8zOEhtMHA5Ynk1Nk1Dd2xZZ0FhZkIzUDhQaAo5c3FPMUc5RFRkeTRMQ3l2ZDFkelV4U1p5aTVjUWE5dzZNdTZhMUFqQUxTWWdMbnIvSnJWCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUwrbnpNSnRBa0JBY1lja0VUMFJzQU13RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak13TXpBME1Ua3lPREV5V2hjTk1qUXdNekF6TVRreU9ERXlXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUt6bmd6T1htaFRZczJJQ2U4dWNJZkxJb2ZHNjE0VWtsb0tTanVIK3IyL3VEbnd1SURMOApoaTN1K1R4OC9jdENBbDk5Wlo0UEgvbjlrMkw1Q3J6N2xDUXBNMmE2WHJ1dzQxL1pHdWRTRWN1WXpmL2lTZy93Ci9TYlpHN21Sc1RDeDNFTnpXRzNPOGtCNnJrNkdveWZWMDFNZzZKQ3ZTUXlYZFUrVWVtTEFXZ2lxM2FPaW4wVkcKZnkxK3VSUENMc2swdFFrTkozWis0UjVERWxVMWJkRGRTS2RNZ3dyMWZyeGIwbEdDYWJHTHUxSVd3eWQ4SUxXbQpSUWEvbGpkcjRtZG1DbGd3ZnBlZ0NSTktpcDdaYlFGTU1JL0RXTnBvQ2N4dXBra2ZNaFhHd0N1TlJzNGdtU2c3ClBHVnZEK2h4L2FYVGY3WHlPWlFuYkJhZ09VdXhIVnRLNDdFQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCVndwY3UrMXJQSVhxdWE0aWxEOFhyT0pOaFd3RllxbzdmelU1YkYzVTMKN3VsSkZNa1hYOGNmWWtiV1NhVUdnOTFqY0FkTlM5STlkd0RXUmcvYWkzOHNFWXlpdEVaMEdTNzlRV0JZODNCOAplaklGeFFjRko3RW9UNlBtaU4vdEZtQUZHTjczUGJFV3IrcTMvK2RaTTF6U1dTZyt2R3d0VmdWSWJEcjl4YkJwCjhxaXpFbjBYSWRXRUI5b0tZcU5uaVA2T29qSlhHL3pydTBSNkN6bDRxV0sxdWIwYS9mWTVBVEN6Y2dURmFaVXMKTHQwbnpXZkRpK0FYTVR6REhaRU5JSUJPMUZTWllaOHhsYlFjZWZnSTExUlJQS0E4UFhBS3dTNyt1akwwWDN3NwoveGZmTWdlcEVJeGJFSjQ2VDRFU0c3YzNaUzdDRnJjK2xrS1IzRHdUSlo1aQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRSXdqWVMzNnZRMEY0K2pXalgwR2ZzekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNd016QTBNVGt5T0RFeVdoY05NalF3TXpBek1Ua3lPREV5V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNrUVJtNTZmLzhDakJCZnBFK0hWMHBrMHBsb3NYclZ5Ynh5REQzZ3VmRwovT0xqZ1F3NUpTbG1sUW10dzhDWlZ4NDlKNEc3c1VoZzl5OFIrdTR4TDF1OEdUMDMxRjdJb2V5R2VpU0NyQnpNCkNiWHRoUzNYZHRMQWNoU0cyTWNpaGsrMkl1MlRtUzJ4aXVXaHNPUEtFSmhOWUlxRDdJWVJ5Rm1tcjA4RVkrbDEKOFBFQUV5NDhFRVc3ZS9PMFl0c0taQmVtd3RCcldkY3dIOWdGTnlxWkxjOWpjdGlxOU93U1RZRkRMN1J1SE9xZAphMkxiN0h0SmRwYWg1cFp5UXErRXdyZitKdTFvVG5ieWw0VTQvUGx6aitxOGVnWkdCcUJNV0JQSWpRc3ErcjJrCmZ1bzF3a3dFYVNzMUViaDNOazJzK2NBM2Y0TytqUElyVWF5cENwOVBnMm9SQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFBSmFGR1ltNHNOL05MNFRpRnZ0QU04NkRjVFcKd0JhK0pweHNNUWtDZzNvYmNQKy9sNmtCMS9kUlJHMjljT3M1bnRJMExwamdmaEN6VDF2dHpYTHBNeHA0aWNPdQp2VmNvYXIvZHVYN2VlQ1RVR1pkTlJWUEtpaEQwZXJkMWpqOFFEMWgzSDF6N21FMnBsZmNYanRXc29iUVFaOTRHCm9oMERlN2dpY3BDM0lrSzhjT1kvMjlrY3QyaVZTQzZIcG5ROUhuRlpxOFZGbkhNNEFnbVdGZlNWaFp3ejJPV2cKeTRHc0JjbUtGUUhxRXMyRGN5dGR0VXlOL2hqVHJ1eVorOWs2c0ZrcEVQQjJMTFZ3SjhnTVc1SnZreGlOTmJsSAptL3haeW1vVnVZWjBWa1c4VEJMcS9MbmtGaHJ2L09TR2NBQXYvSEZSV212b0dsMFFvSkt4M1Q3WGkxOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcEVFWnVlbi8vQW93UVg2UlBoMWRLWk5LWmFMRjYxY204Y2d3OTRMbnh2emk0NEVNCk9TVXBacFVKcmNQQW1WY2VQU2VCdTdGSVlQY3ZFZnJ1TVM5YnZCazlOOVJleUtIc2hub2tncXdjekFtMTdZVXQKMTNiU3dISVVodGpISW9aUHRpTHRrNWt0c1lybG9iRGp5aENZVFdDS2creUdFY2hacHE5UEJHUHBkZkR4QUJNdQpQQkJGdTN2enRHTGJDbVFYcHNMUWExblhNQi9ZQlRjcW1TM1BZM0xZcXZUc0VrMkJReSswYmh6cW5XdGkyK3g3ClNYYVdvZWFXY2tLdmhNSzMvaWJ0YUU1MjhwZUZPUHo1YzQvcXZIb0dSZ2FnVEZnVHlJMExLdnE5cEg3cU5jSk0KQkdrck5SRzRkelpOclBuQU4zK0R2b3p5SzFHc3FRcWZUNE5xRVFJREFRQUJBb0lCQUFqQng4TlhyR1FkanZFTwo5R05oWVdRa0RDVmJCajVEeVRtK3VJMlpsdzNPMGJIYllYRnlmOENPVlpQRUNmS2k2R1BPUldaaVR6K01MaUJCClJvMnN2ckZLank3NHpZell4U2x1UGFBUjJQOHZ6Vms2Ym5VOFNvUWtFT0FYa3BaT250VlJDMldCRnlTT0NTd1QKcURGUHJTOEM1SitmN28zb0pvOXliVDRJclp1eUJPbklhbVJFY2Y0RnBiMkRVRnpnajNyU3lmUDBNQk8wZFo4MAp3UjlqYVN0R1VmZ04zdSs1NUJlTWlsN3NhTDlrMVBJMXRDbC9LU01yN2F0cm9UYUlxNnhVYnRFVER1S1J5Y01LCndDUUMrUjdUMDhzakErREt4MS81UzNodGtBcXUrOUlGdEdtWjhKRW55NHp5T2cvd1pObXZDTGlGRXYvT2JLNTEKY2locDJya0NnWUVBelhwVG5aM01FSWoycTNOMWFsdUtPUjlFVmpUTjNqcytGTG1LOUx5TUl2TFdieitEaHZmcwovY1JmN3ZaMHFxQjFzY0VOeXd2dU8vdFhSVFNicjVEeHk0eTBLMlZOLzExaVpDcWdCRnJ0MytDSjdIVStUa0lhCnI4OXV1VXFCNjVIdzZvbWNINFlkWlZKNEZOZC9zY3o5WEZzQXJTbUlGeWI4WXFDTldrN3RZU01DZ1lFQXpLUDcKN09MdVVYSFoyZmtNRTFNeXBQeERxTUhrb0FRNm5STHZjbDhDbytQNUZCdVhrWWlESEJUUnJxV2MyQnVkNUN1SApDRGlabVZnVm9VdzErVE1nNnVlTW5HTkpKd1BMS0oxOS9QUVFUVUZGb2dZMWtBb0xqa1JqckNuMU1pN0MzSk9RCjBpR0RKcy8ybzJ4TGtDUE1qNnVQZzRkQ2I2LzRXVnJWY0lpM3pUc0NnWUJqU1E5c0lwby9CeDlCdXhscUdlOVIKS0tXSmpoeEhuSktqeXYrMHdBSnF4TElPc1Q3cGtaU25EaU5Zd1NlZ1pzWlg3TE93Z0FST1lXVks0RisxMXJDdgpMVDdGbFQ2NS9MS1ZPZTkyQzBYVG5waW1kQVIySmdUbEhMTWd2enJGekJBQUZCd25NMU95Nk1Wek5LblVEUHdECmkwbHBZcDhLcU9EYyt6MHgvTjlBeHdLQmdEMGg5ODVxZEh0TUlhSm1MZDlRQ1Y4VUpUb3l3aE96YjdjZ3d2dE4KdXNJdkJtZWxYb0FSWWVsdnByd2ZxVjA5MHNzbzNhdnRES1dzbExtY3hMcnZOVFEzZTkvMElSUlFvODQ4VGpqVQp5RkhyMzl0cE0zTVdMU0dRK0oyajR5WGNwa1d5cDU2K2VDbU9Fc1g3UWcrTFFqN2hKM3hKV2VWM2toOVBiVmV5CjRBV2xBb0dBRTArS3FSWW9UYlRUNCsvS3ozQ0NMcFZGTlZJOFJUaHZPUGhCcG9CelVqVTlyTm9jNUtWVUp0RS8KVTZBK1FHZnBtNms0MWtsc1lFclVWZm5ucm94SUxOcXNhZ3I5T0dnMGlHcFZSNS8xMTN5bkk0YVlCMUxMbEtMeQp0cVYrbGxQTHFHSStvaE9xczk1NjJVK3dNellrdnFlc2JoTWZ4ZzBLVWw3MGt6L1RsM1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRSXdqWVMzNnZRMEY0K2pXalgwR2ZzekFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNd016QTBNVGt5T0RFeVdoY05NalF3TXpBek1Ua3lPREV5V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNrUVJtNTZmLzhDakJCZnBFK0hWMHBrMHBsb3NYclZ5Ynh5REQzZ3VmRwovT0xqZ1F3NUpTbG1sUW10dzhDWlZ4NDlKNEc3c1VoZzl5OFIrdTR4TDF1OEdUMDMxRjdJb2V5R2VpU0NyQnpNCkNiWHRoUzNYZHRMQWNoU0cyTWNpaGsrMkl1MlRtUzJ4aXVXaHNPUEtFSmhOWUlxRDdJWVJ5Rm1tcjA4RVkrbDEKOFBFQUV5NDhFRVc3ZS9PMFl0c0taQmVtd3RCcldkY3dIOWdGTnlxWkxjOWpjdGlxOU93U1RZRkRMN1J1SE9xZAphMkxiN0h0SmRwYWg1cFp5UXErRXdyZitKdTFvVG5ieWw0VTQvUGx6aitxOGVnWkdCcUJNV0JQSWpRc3ErcjJrCmZ1bzF3a3dFYVNzMUViaDNOazJzK2NBM2Y0TytqUElyVWF5cENwOVBnMm9SQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFBSmFGR1ltNHNOL05MNFRpRnZ0QU04NkRjVFcKd0JhK0pweHNNUWtDZzNvYmNQKy9sNmtCMS9kUlJHMjljT3M1bnRJMExwamdmaEN6VDF2dHpYTHBNeHA0aWNPdQp2VmNvYXIvZHVYN2VlQ1RVR1pkTlJWUEtpaEQwZXJkMWpqOFFEMWgzSDF6N21FMnBsZmNYanRXc29iUVFaOTRHCm9oMERlN2dpY3BDM0lrSzhjT1kvMjlrY3QyaVZTQzZIcG5ROUhuRlpxOFZGbkhNNEFnbVdGZlNWaFp3ejJPV2cKeTRHc0JjbUtGUUhxRXMyRGN5dGR0VXlOL2hqVHJ1eVorOWs2c0ZrcEVQQjJMTFZ3SjhnTVc1SnZreGlOTmJsSAptL3haeW1vVnVZWjBWa1c4VEJMcS9MbmtGaHJ2L09TR2NBQXYvSEZSV212b0dsMFFvSkt4M1Q3WGkxOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRU3BWN3JTQlZnVmlqR3hqZkdpL0t2ekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TURNd05ERTVNamd4TWxvWERUSTBNRE13TXpFNU1qZ3hNbG93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMUVhISEhTb0tZMEg5aXNaQ0Y2YjJKY3BTd0huNTJGVFVBZ05ZT3NuQ29SVTc4WgpmRUNzdFNqc0Y2VjhaYStWRHU4ZFZtR1RpU041RVlMSFN2OGdKcnNvOVJNL1VUYzBtU3NQRFoyZlZTazdwT3N1CnRWd3hPdUpXZGlMQ2Y2OGhQT3VoTWhCZnVDakFrQVIwQ0w1eHBlSm9MdUhmaExsdkNyOWkzeWdzOFJIVFA0bWcKRzFTRmIxZ2QxejY1b0MxY01wSUcwV0w0enRSZm1ZUmkxYU8wekNJMFpBVWdVYTd4YXdzUGdWOXJrM09hYVJxSQpWYzFoRjMyZzVGY01FSFJZNkEzUGFaNXRIbXFwWGUrUG9relRVZUYyU1VMQTFyUFhyd094M2FhTTZOY0E4VHV5Cm9qL0xFQW5WeExmb3FEVDlmNjBYR01Wd0VTOFRRUWhsM1RaU3JvTUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRUVNQkI0ME9DallDUFpiSGNKYVdoN0NGZE4xTTBOQVZ5N0YKQ2kyWXBmU3M5dWZ5K3BmS2VFOFNCcTY4SmdrR2IrT3E5ZWlWMTM5Z2YxN1Y4dkIwc0NoK29salpLajJXQ0tTZgoybVphS2dUWGpQblcyVnJRRHBra3pIZ2F3U1ZYR09vcW9mU3cxQkQ3U1p2U1lHWW5YK3V4blZrczZSNVZBV2UrCkdWdVRKRUtlUmJrWUJzMEg2Qm9ra2tTRjFoV1lwUlV6Q3krMTUwcWpLMGVGOTUyYVE5MjFUbWhUN3VkQ2lLNVkKMTZCQkltVjVobGEwaEtyTzFYVnZTU2pmMnM5UkgwVHZJUFVqVlN1L2x6a2lkS3Z2S0wrUzVTWU01bHB6NDBUNwppR25jbTRQN3J2YVYxK2dTbDEyRFhTZHJHS2dTREIrSzY1M3RRcFZnRnJnTVJxYlN0Y2M9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdEJjY2NkS2dwalFmMkt4a0lYcHZZbHlsTEFlZm5ZVk5RQ0ExZzZ5Y0toRlR2eGw4ClFLeTFLT3dYcFh4bHI1VU83eDFXWVpPSkkza1Jnc2RLL3lBbXV5ajFFejlSTnpTWkt3OE5uWjlWS1R1azZ5NjEKWERFNjRsWjJJc0ovcnlFODY2RXlFRis0S01DUUJIUUl2bkdsNG1ndTRkK0V1VzhLdjJMZktDenhFZE0vaWFBYgpWSVZ2V0IzWFBybWdMVnd5a2diUll2ak8xRitaaEdMVm83VE1JalJrQlNCUnJ2RnJDdytCWDJ1VGM1cHBHb2hWCnpXRVhmYURrVnd3UWRGam9EYzlwbm0wZWFxbGQ3NCtpVE5OUjRYWkpRc0RXczlldkE3SGRwb3pvMXdEeE83S2kKUDhzUUNkWEV0K2lvTlAxL3JSY1l4WEFSTHhOQkNHWGRObEt1Z3dJREFRQUJBb0lCQUVWL1liZS9LOFhYK2E0NQpJTThXbTZOZTAxTUJnaVJjeStvQ1JBU1RlUlIyNlZXbTlSOVVSdmtLMnprK24xTTU5N0JwSnV1eTdzcGtyMUJECnJucDBJdDQ1T1JKN2JkRWJHRHpZcTAxM3JucWlETXZCazdXSFBnMFlockIxVktiMThiZVExbXdoTkVWdHdtWWwKalRaSlQxWG5GS2lRQkgwM0QvTzVxUnFzOVQ4R0cyVWE5R1hoNnh0Ums2ZCt0Z0RGb1FaLzZZNXJVdzlRL0ljdQpsU0h2eks1L2J1emZNZVU4ZEkveitOVng3dGE4THhPaVlmZUxyY2cwOW9rdTBIWHIxQ3d4QnJPZmMwK0hEUnBBCjBRazVqRVJKVUpvcy9NRUlNT2k1UTNYSjVMUkZpQThvcHYzeFZhekJkK3h4REVCTmg1UE1UbHVWR0czTTdCSE0KVHl2dEF3a0NnWUVBNjAxWmF4bnArRWhrakZVOVdKMU9JTTczZno1ZmVXcjZ3eS9YN2l5Q2tYMVFEZ3BPRk5uTgo4MlNvY3pFdjVFdmUyaGI2Qi9lL1VQbkhRN1BPait6WEl5K0cvdVlpQkV3Mm1rUzhjZGQ1cytoN0UzbmV4cEFMCk0xMXlnSlFjdC9ULzRiWGRDQlI5MCtlQ080c0FOYmpZVnhuT1FTZXdDRlMxbnBYMG1lL2RmeWNDZ1lFQXcrNTUKT1N4c1EvWlhNRklEZE1paHJFdkNyMitMZGg2K0M2bU1Lbzl0N0dXTDBzQzFadUxIbWJ6RVpPYzM0ckRKWmNjcApqVXFKVzRFcEFocEdCTGV2Z0FSY1NheXVnenBVeTlwaE9JUG1YR20wd3NnYm1TU3dxR0ZTNkZwSUtiSEZBelVOClhTQmJONjN1RUhMNVdCK011RDhIV2FXWEdiS0ZkTjZsQ2IwRzcwVUNnWUVBcWlhNTFYL2N0K1NwaU8wT3VtaXUKR1gxd2JYd09FRC95NjNoS1hmbWp4VTludDI5dVBSZXZIU1VaeG9xNEJnOXpMQ1BYVkRHc0VBTS9PODduUFI1WQpDQ0tUTFBuL2VUb2ZkZmpraURIMzJNZnhVQWtkdGxwdEx3eVJBemVYZU5MYXdqMy9ncHRHemhnb0RhU2JWejIrCmUyVzJ4MWpLcTR1TjlncWI0VUVaMjVzQ2dZQnRBVWJHRFRYcWxhbXFRMmFTMlhCQStDRkhFMHJHbTVIbDBSMGYKTEk3ZVh4eHNVelJaR2tBc0F2NU1tT3JabnJ0ZGVYRmZueUZPSEV5aFU5YXlsekwzaVBXRE02UWZkQnRyRW9MVwpPMk8wOUVaUnU1ekhGY2VHMWlhWENHdHZidXlKdlVGREYxWklZdWE0bGc2cy9WaC94T2trOGVCZnRwZFREdTlJCnZMYVg5UUtCZ0RSay9YSnNuTjVPbXlDWmtHclpJMDlxUUx6cWxVNC96bmVxZ0NlM0QrMG9MRnRGNm1iZHdvM0YKQ1V6OXRKU05Oem9kUWlvSS9jclBGcTNMYzZVU0NucUJmbWlVaE9BMmFrTVVYN0FTRmhxVkdOL0piTVJ2d28wSApTcmd0c1JoRzRlNnhtMHY0UEZQWDkybS93Z25aZFdXa2VWbFNhaEJoaTJXYnptVEFiS28rCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRU3BWN3JTQlZnVmlqR3hqZkdpL0t2ekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TURNd05ERTVNamd4TWxvWERUSTBNRE13TXpFNU1qZ3hNbG93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMUVhISEhTb0tZMEg5aXNaQ0Y2YjJKY3BTd0huNTJGVFVBZ05ZT3NuQ29SVTc4WgpmRUNzdFNqc0Y2VjhaYStWRHU4ZFZtR1RpU041RVlMSFN2OGdKcnNvOVJNL1VUYzBtU3NQRFoyZlZTazdwT3N1CnRWd3hPdUpXZGlMQ2Y2OGhQT3VoTWhCZnVDakFrQVIwQ0w1eHBlSm9MdUhmaExsdkNyOWkzeWdzOFJIVFA0bWcKRzFTRmIxZ2QxejY1b0MxY01wSUcwV0w0enRSZm1ZUmkxYU8wekNJMFpBVWdVYTd4YXdzUGdWOXJrM09hYVJxSQpWYzFoRjMyZzVGY01FSFJZNkEzUGFaNXRIbXFwWGUrUG9relRVZUYyU1VMQTFyUFhyd094M2FhTTZOY0E4VHV5Cm9qL0xFQW5WeExmb3FEVDlmNjBYR01Wd0VTOFRRUWhsM1RaU3JvTUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRUVNQkI0ME9DallDUFpiSGNKYVdoN0NGZE4xTTBOQVZ5N0YKQ2kyWXBmU3M5dWZ5K3BmS2VFOFNCcTY4SmdrR2IrT3E5ZWlWMTM5Z2YxN1Y4dkIwc0NoK29salpLajJXQ0tTZgoybVphS2dUWGpQblcyVnJRRHBra3pIZ2F3U1ZYR09vcW9mU3cxQkQ3U1p2U1lHWW5YK3V4blZrczZSNVZBV2UrCkdWdVRKRUtlUmJrWUJzMEg2Qm9ra2tTRjFoV1lwUlV6Q3krMTUwcWpLMGVGOTUyYVE5MjFUbWhUN3VkQ2lLNVkKMTZCQkltVjVobGEwaEtyTzFYVnZTU2pmMnM5UkgwVHZJUFVqVlN1L2x6a2lkS3Z2S0wrUzVTWU01bHB6NDBUNwppR25jbTRQN3J2YVYxK2dTbDEyRFhTZHJHS2dTREIrSzY1M3RRcFZnRnJnTVJxYlN0Y2M9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.12.4
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.12.4
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMzAzMDQxOTI4MDJaFw0yNDAzMDMxOTI4MjJaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEoxTDP1KvZMkO6oUkZxrUz9/rhoc26DuZ0AgeErHOx4hlcOlgsKJqcq4KhBUo
            UZMDmYTWr466Rj9L7b/87qNKDqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBQgfJwc+vfVsO6U85ADLJWGxT07TzAKBggqhkjOPQQDAgNIADBFAiBoivCX5Pjb
            7qMoW5dCUM1w7ORLAgJXjDfsNtEf8jSJpQIhAO82Emm0QKUFIt9UXQIfuVUCDTkx
            cKuxjwd0nneN47Sy
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMzAzMDQxOTI4MDJaFw0yNDAzMDMxOTI4MjJaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEoxTDP1KvZMkO6oUkZxrUz9/rhoc26DuZ0AgeErHOx4hlcOlgsKJqcq4KhBUo
      UZMDmYTWr466Rj9L7b/87qNKDqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBQgfJwc+vfVsO6U85ADLJWGxT07TzAKBggqhkjOPQQDAgNIADBFAiBoivCX5Pjb
      7qMoW5dCUM1w7ORLAgJXjDfsNtEf8jSJpQIhAO82Emm0QKUFIt9UXQIfuVUCDTkx
      cKuxjwd0nneN47Sy
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.12.4
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNekF6TURReE9USTRNREphRncweU5EQXpNRE14T1RJNE1qSmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVveFREUDFLdlpNa082b1VrWnhyVXo5L3Job2MyNkR1WjBBZ2VFckhPeDRobGNPbGdzS0pxY3E0S2hCVW8KVVpNRG1ZVFdyNDY2Umo5TDdiLzg3cU5LRHFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCUWdmSndjK3ZmVnNPNlU4NUFETEpXR3hUMDdUekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUJvaXZDWDVQamIKN3FNb1c1ZENVTTF3N09STEFnSlhqRGZzTnRFZjhqU0pwUUloQU84MkVtbTBRS1VGSXQ5VVhRSWZ1VlVDRFRreApjS3V4andkMG5uZU40N1N5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVArcTBwWXBtV2dzNUdmeHVKcWVScmd6OWt0aTBBVEdDV2RsTytpK0orOFVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFb3hURFAxS3ZaTWtPNm9Va1p4clV6OS9yaG9jMjZEdVowQWdlRXJIT3g0aGxjT2xnc0tKcQpjcTRLaEJVb1VaTURtWVRXcjQ2NlJqOUw3Yi84N3FOS0RnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMzAzMDQxOTI4MDJaFw0yNDAzMDMxOTI4MjJaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEoxTDP1KvZMkO6oUkZxrUz9/rhoc26DuZ0AgeErHOx4hlcOlgsKJqcq4KhBUo
    UZMDmYTWr466Rj9L7b/87qNKDqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBQgfJwc+vfVsO6U85ADLJWGxT07TzAKBggqhkjOPQQDAgNIADBFAiBoivCX5Pjb
    7qMoW5dCUM1w7ORLAgJXjDfsNtEf8jSJpQIhAO82Emm0QKUFIt9UXQIfuVUCDTkx
    cKuxjwd0nneN47Sy
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.4
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.4
        linkerd.io/proxy-version: stable-2.12.4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 7a26cf32ed70600702e6423ee661fdfee75a30249672049ebb9ca40c113fdd3d
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.4
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.4
        linkerd.io/proxy-version: stable-2.12.4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 7a26cf32ed70600702e6423ee661fdfee75a30249672049ebb9ca40c113fdd3d
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.4
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
spec:
  concurrencyPolicy: Replace
  schedule: "38 19 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.12.4
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.4
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.4
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.12.4
        linkerd.io/proxy-version: stable-2.12.4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 7a26cf32ed70600702e6423ee661fdfee75a30249672049ebb9ca40c113fdd3d
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.12.4
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNekF6TURReE9USTRNREphRncweU5EQXpNRE14T1RJNE1qSmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFb3hURFAxS3ZaTWtPNm9Va1p4clV6OS9yaG9jMjZEdVowQWdlRXJIT3g0aGxjT2xnc0tKcWNxNEtoQlVvCiAgICAgICAgVVpNRG1ZVFdyNDY2Umo5TDdiLzg3cU5LRHFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlFnZkp3Yyt2ZlZzTzZVODVBRExKV0d4VDA3VHpBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlCb2l2Q1g1UGpiCiAgICAgICAgN3FNb1c1ZENVTTF3N09STEFnSlhqRGZzTnRFZjhqU0pwUUloQU84MkVtbTBRS1VGSXQ5VVhRSWZ1VlVDRFRreAogICAgICAgIGNLdXhqd2Qwbm5lTjQ3U3kKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSVArcTBwWXBtV2dzNUdmeHVKcWVScmd6OWt0aTBBVEdDV2RsTytpK0orOFVvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVveFREUDFLdlpNa082b1VrWnhyVXo5L3Job2MyNkR1WjBBZ2VFckhPeDRobGNPbGdzS0pxCiAgICAgICAgY3E0S2hCVW9VWk1EbVlUV3I0NjZSajlMN2IvODdxTktEZz09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU16QXpNRFF4T1RJNE1ESmFGdzB5TkRBek1ETXhPVEk0TWpKYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVveFREUDFLdlpNa082b1VrWnhyVXo5L3Job2MyNkR1WjBBZ2VFckhPeDRobGNPbGdzS0pxY3E0S2hCVW8KICBVWk1EbVlUV3I0NjZSajlMN2IvODdxTktEcU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCUWdmSndjK3ZmVnNPNlU4NUFETEpXR3hUMDdUekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUJvaXZDWDVQamIKICA3cU1vVzVkQ1VNMXc3T1JMQWdKWGpEZnNOdEVmOGpTSnBRSWhBTzgyRW1tMFFLVUZJdDlVWFFJZnVWVUNEVGt4CiAgY0t1eGp3ZDBubmVONDdTeQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
